.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "TAUEX" "1" "06/25/2007" "" "Tools"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
tauex \- Allows you to choose a tau/papi configuration at runtime.
.SH "SYNOPSIS"
.HP 6
\fBtauex\fR [\-v] [\-u\ \fIUser\ mode\ counts\fR] [\-k\ \fIKernel\ mode\ counts\fR] [\-S\ \fISupervisor\ mode\ counts\fR] [\-I\ \fIInterrupt\ mode\ counts\fR] [\-a] [\-m] [\-e\ \fIPAPI\ event\fR] [\-T\ \fITAU\ option\fR] [\-XrunTAU\ \fITAU\ options\fR] {\-\-} {\fIApplication\ executable\fR} [\fIApplication\ options\fR]
.SH "DESCRIPTION"
.PP
Replace this script by the execuable during runtime to dynamically load a TAU profiling/tracing option or to select which papi events/domain to use during execuation of the application. If we compile TAU with the \-optShared option and link in the libTAU.so, we can at runtime set the LD_LIBRARY_PATH and pass other parameters (papi events) to the executable and choose a different TAU measurement option using tauex.
.SH "OPTIONS"
.TP
User mode counts
Instructs PAPI to only count user events.
.TP
\-v
Verbose mode.
.TP
\-a
Count all native events (implies \-m).
.TP
\-m
Multiple runs (enough runs to gather all events).
.TP
Kernel mode counts
Instructs PAPI to only count kernel events.
.TP
Supervisor mode counts
Instructs PAPI to only count Supervisor/Hypervisor events.
.TP
Interrupt mode counts
Instructs PAPI to only count Interrupt events.
.TP
PAPI event
set the PAPI to profile this native or local event.
.TP
TAU option
Profiles the application with this TAU option (requires TAU to be built with this option).
.TP
Application executable
The Application you want TAU or PAPI to profile.
.TP
Application option
Any Application options you need to specify.
