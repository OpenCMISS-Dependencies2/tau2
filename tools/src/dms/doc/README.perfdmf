*****************************************************************************
**                      PerfDMF  - Performance Database                    **
**                       http://tau.cs.uoregon.edu                         **
*****************************************************************************
**  Copyright 2003-2004                                                    **
**  Department of Computer and Information Science, University of Oregon   **
*****************************************************************************
*****************************************************************************
**  Authors :    
**       Kevin Huck (khuck@cs.uoregon.edu) (UO)
**       Robert Michael Ansell Bell (UO), 
**       Li Li (UO), 
**  Principal Investigators : 
**       Allen Malony (UO)
**  TAU project was developed by Bernd Mohr, Lars Hansen, Kurt Windisch, 
**  Darryl Brown, et. al. and directed by Allen Malony at University of Oregon.
**  The TAU Portable Profiling Package uses part of TAU.
*****************************************************************************

Performance Database: PerfDMF
****************************

PerfDMF is a tool related to the TAU framework.  The PerfDMF database is
designed to store and provide access to TAU profile data.  Other profile
formats are also supported, including dynaprof, mpiP and HPMToolkit.
A number of utility programs have been written in Java to load the data 
into PerfDMF and to query the data.  With PerfDMF, users can perform 
performance analyses such as regression analysis, scalability analysis 
across multiple trials, and so on.  An unlimited number of comparative 
analyses are available through the PerfDMF toolkit.  Work is being done 
to provide the user with standard analysis tools, and an API has been 
developed to access the data with standard Java classes.

Prerequisites:
************** 

- PostgreSQL 7.0, MySQL 3.x, 4.x, or Oracle 10g 

PerfDMF requires a DataBase Management System (DBMS).  It has been tested 
with PostgreSQL, MySQL, and Oracle databases.  The default database is 
PostgreSQL (http://www.postgresql.org).

- Java 1.4

The PerfDMF utilities and API are written in Java.

Installation:
*************

PerfDMF is installed as part of the standard TAU release.  Shell scripts
are installed in the TAU bin directory to run the configuration and 
loading utilities.  It is assumed that the user has installed TAU and
run TAU's configure and 'make install'.

*****************************************************************************
1) Create a database
*****************************************************************************

See README.postgresql for PostgreSQL usage
See README.mysql for MySQL usage
see README.oracle for Oracle usage

*****************************************************************************
2) Configuration
*****************************************************************************

To configure PerfDMF, run the command (assuming $TAUROOT/$arch/bin is
in your path):

	$ perfdmf_configure

The configure program will prompt the user for several values.  The default 
values (given in parentheses) in all cases will work for most users.

*****************************************************************************
3) Loading application data
*****************************************************************************

To load application data, simply run the perfdmf_loadapp program.  There is 
one parameter for perfdmf_loadapp, and it is:

	{-h --help} : list these parameter options
	{-x --xmlfile} filename : the name of the application data file

The xmlfile passed in is the application data file.  A sample application
data file is $TAUROOT/tools/src/dms/data/App_Info.xml.  For example,
you could run perfdmf_loadapp this way:

	$ perfdmf_loadapp -x App_Info.xml

The application loader will load the application, and return the ID of the
application in the database.

Alternatively, just run the utility to create a default application, 
perfdmf_createapp.  There is one parameter:

	{-h --help} : list these parameter options
	{-n --name} application_name : the name of the application

For example, to create an entry for the NAS parallel benchmarks v.2.3:

	$ perfdmf_createapp -n NPB2.3

*****************************************************************************
4) Loading experiment data
*****************************************************************************

To load experiment data, simply run the perfdmf_loadexp program.  There are 
two parameters for perfdmf_loadexp, and they are:

	{-h --help} : list these parameter options
	{-x --xmlfile} filename : the name of the experiment data file
	{-a --applicationid} value : the value of the application ID

The xmlfile passed in is the experiment data file.  A sample experiment
data file is $TAUROOT/tools/src/dms/data/Exp_Info.xml.  For example,
you could run perfdmf_loadexp this way:

	$ perfdmf_loadexp -x Exp_Info.xml - a 1

The experiment loader will load the experiment, and return the ID of the
experiment in the database.

Alternatively, just run the utility to create a default experiment, 
perfdmf_createexp.  There are two parameters:

	{-h --help} : list these parameter options
	{-n --name} experiment_name : the name of the experiment
	{-a --applicationid} value : the value of the application ID

For example, to create an entry for a 64 node experiment of application 1:

	$ perfdmf_createexp -a 1 -n 64_nodes

*****************************************************************************
5) Loading Trial data
*****************************************************************************

The trial data is loaded by running the perfdmf_loadtrial command.  The 
parameters for perfdmf_loadtrial are:


Usage: perfdmf_loadtrial -e <experiment id> -n <name> [options] <files>

Required Arguments:

  -e, --experimentid <number>    Specify associated experiment ID for the trial
  -n, --name <text>              Specify the name of the trial

Optional Arguments:

  -f, --filetype <filetype>      Specify type of performance data, options are:
                                   profiles (default), pprof, dynaprof, mpip,
                                   gprof, psrun, hpm
  -t, --trialid <number>         Specify trial ID
  -i, --fixnames                 Use the fixnames option for gprof

Notes:
  For the TAU profiles type, you can specify either a specific set of profile
files on the commandline, or you can specify a directory (by default the 
current directory).  The specified directory will be searched for profile.*.*.*
files, or, in the case of multiple counters, directories named MULTI_* 
containing profile data.

Examples:

  perfdmf_loadtrial -e 12 -n "Batch 001"
    This will load profile.* (or multiple counters directories MULTI_*) into
    experiment 12 and give the trial the name "Batch 001"

  perfdmf_loadtrial -e 12 -n "HPM data 01" perfhpm*
    This will load perfhpm* files of type HPMToolkit into experiment 12 and 
    give the trial the name "HPM data 01"


Once the data has been loaded into the database, query and analysis can be
performed.  One such tool is the paraprof tool that is in the TAU
distribution.  See the paraprof documentation for details.
