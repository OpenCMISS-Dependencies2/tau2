#!/usr/bin/env python
#
# Fast and easy instrumentation of Python modules
#
# John C. Linford (jlinford@paratools.com)
# April 2015
#
from __future__ import print_function
import os
import sys

def dieInFlames(msg):
  print(msg, file=sys.stderr)
  sys.exit(-1)

try:
  import tau
except ImportError:
  dieInFlames("module 'tau' not found in PYTHONPATH")
except:
  dieInFlames("Unknown exception while importing tau: %s" % sys.exc_info()[0])

if __name__ == '__main__':
  try:
    modname = sys.argv[1]
  except IndexError:
    print('Usage: %s <modulename>' % sys.argv[0])
    sys.exit(1)

  if os.path.exists(modname):
    path = os.path.dirname(modname)
    modname = os.path.basename(modname)
    if modname[-3:].lower() != '.py':
      dieInFlames("Sorry, I don't know how to instrument '%s'" % modname)
    modname = modname[:-3]
    sys.path.append(path)

  try:
    tau.runmodule(modname)
  except ImportError:
    print("No module named '%s'" % modname, file=sys.stderr)
    sys.exit(-1)

