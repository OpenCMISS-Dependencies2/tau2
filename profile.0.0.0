21 templated_functions_MULTI_TIME
# Name Calls Subrs Excl Incl ProfileCalls # <metadata><attribute><name>Metric Name</name><value>TIME</value></attribute><attribute><name>CPU Cores</name><value>4</value></attribute><attribute><name>CPU MHz</name><value>2664.000</value></attribute><attribute><name>CPU Type</name><value>Intel(R) Core(TM)2 Quad CPU Q9400 @ 2.66GHz</value></attribute><attribute><name>CPU Vendor</name><value>GenuineIntel</value></attribute><attribute><name>CWD</name><value>/home/scottb/tau2</value></attribute><attribute><name>Cache Size</name><value>3072 KB</value></attribute><attribute><name>Command Line</name><value>./FFT</value></attribute><attribute><name>Executable</name><value>/home/scottb/tau2/FFT</value></attribute><attribute><name>Hostname</name><value>adagio</value></attribute><attribute><name>Local Time</name><value>2010-09-28T14:52:54-07:00</value></attribute><attribute><name>Memory Size</name><value>8193648 kB</value></attribute><attribute><name>Node Name</name><value>adagio</value></attribute><attribute><name>OS Machine</name><value>x86_64</value></attribute><attribute><name>OS Name</name><value>Linux</value></attribute><attribute><name>OS Release</name><value>2.6.32-24-generic</value></attribute><attribute><name>OS Version</name><value>#42-Ubuntu SMP Fri Aug 20 14:21:58 UTC 2010</value></attribute><attribute><name>Starting Timestamp</name><value>1285710768265988</value></attribute><attribute><name>TAU Architecture</name><value>x86_64</value></attribute><attribute><name>TAU Config</name><value> -gpuinc=/usr/include</value></attribute><attribute><name>TAU Makefile</name><value>/home/scottb/tau2/x86_64/lib/Makefile.tau</value></attribute><attribute><name>TAU Version</name><value>2.18.2-cvs</value></attribute><attribute><name>TAU_CALLPATH</name><value>off</value></attribute><attribute><name>TAU_CALLPATH_DEPTH</name><value>2</value></attribute><attribute><name>TAU_COMPENSATE</name><value>off</value></attribute><attribute><name>TAU_PROFILE</name><value>on</value></attribute><attribute><name>TAU_PROFILE_FORMAT</name><value>profile</value></attribute><attribute><name>TAU_SAMPLING</name><value>off</value></attribute><attribute><name>TAU_THROTTLE</name><value>on</value></attribute><attribute><name>TAU_THROTTLE_NUMCALLS</name><value>100000</value></attribute><attribute><name>TAU_THROTTLE_PERCALL</name><value>10</value></attribute><attribute><name>TAU_TRACE</name><value>off</value></attribute><attribute><name>TAU_TRACK_HEADROOM</name><value>off</value></attribute><attribute><name>TAU_TRACK_HEAP</name><value>off</value></attribute><attribute><name>TAU_TRACK_MEMORY_LEAKS</name><value>off</value></attribute><attribute><name>Timestamp</name><value>1285710774229913</value></attribute><attribute><name>UTC Time</name><value>2010-09-28T21:52:54Z</value></attribute><attribute><name>pid</name><value>839</value></attribute><attribute><name>username</name><value>scottb</value></attribute></metadata>
".TAU application  " 1 178 269166 5963579 0 GROUP="TAU_DEFAULT" 
"cl_int clGetPlatformIDs(cl_uint, cl_platform_id *, cl_uint *) C" 4 0 2049 2049 0 GROUP="TAU_USER" 
"cl_int clGetDeviceIDs(cl_platform_id, cl_device_type, cl_uint, cl_device_id *, cl_uint *) C" 4 0 1 1 0 GROUP="TAU_USER" 
"cl_int clGetPlatformInfo(cl_platform_id, cl_platform_info, size_t, void *, size_t *) C" 4 0 2 2 0 GROUP="TAU_USER" 
"cl_int clGetDeviceInfo(cl_device_id, cl_device_info, size_t, void *, size_t *) C" 2 0 32 32 0 GROUP="TAU_USER" 
"cl_command_queue clCreateCommandQueue(cl_context, cl_device_id, cl_command_queue_properties, cl_int *) C" 1 0 5 5 0 GROUP="TAU_USER" 
"cl_program clCreateProgramWithSource(cl_context, cl_uint, const char **, const size_t *, cl_int *) C" 1 0 10 10 0 GROUP="TAU_USER" 
"cl_int clBuildProgram(cl_program, cl_uint, const cl_device_id *, const char *, void (*)(cl_program, void *) C, void *) C" 1 0 3714749 3714749 0 GROUP="TAU_USER" 
"cl_int clGetProgramBuildInfo(cl_program, cl_device_id, cl_program_build_info, size_t, void *, size_t *) C" 2 0 2 2 0 GROUP="TAU_USER" 
"cl_mem clCreateBuffer(cl_context, cl_mem_flags, size_t, void *, cl_int *) C" 2 0 17 17 0 GROUP="TAU_USER" 
"cl_int clEnqueueWriteBuffer(cl_command_queue, cl_mem, cl_bool, size_t, size_t, const void *, cl_uint, const cl_event *, cl_event *) C" 2 0 43478 43478 0 GROUP="TAU_USER" 
"cl_kernel clCreateKernel(cl_program, const char *, cl_int *) C" 3 0 78994 78994 0 GROUP="TAU_USER" 
"cl_int clSetKernelArg(cl_kernel, cl_uint, size_t, const void *) C" 5 0 2 2 0 GROUP="TAU_USER" 
"cl_int clEnqueueNDRangeKernel(cl_command_queue, cl_kernel, cl_uint, const size_t *, const size_t *, const size_t *, cl_uint, const cl_event *, cl_event *) C" 30 0 1396 1396 0 GROUP="TAU_USER" 
"cl_int clWaitForEvents(cl_uint, const cl_event *) C" 20 0 1796953 1796953 0 GROUP="TAU_USER" 
"cl_int clGetEventProfilingInfo(cl_event, cl_profiling_info, size_t, void *, size_t *) C" 80 0 28 28 0 GROUP="TAU_USER" 
"cl_int clEnqueueReadBuffer(cl_command_queue, cl_mem, cl_bool, size_t, size_t, void *, cl_uint, const cl_event *, cl_event *) C" 10 0 56292 56292 0 GROUP="TAU_USER" 
"cl_int clReleaseMemObject(cl_mem) C" 2 0 389 389 0 GROUP="TAU_USER" 
"cl_int clReleaseCommandQueue(cl_command_queue) C" 1 0 3 3 0 GROUP="TAU_USER" 
"cl_int clReleaseContext(cl_context) C" 1 0 1 1 0 GROUP="TAU_USER" 
"cl_int clReleaseEvent(cl_event) C" 3 0 10 10 0 GROUP="TAU_USER" 
0 aggregates
