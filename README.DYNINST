Using TAU with Dyninst 4.x.
---------------------------
Part I) Configuring and installing Dyninst 2.x 

% tar xzvf  binDist4.x.tar.gz
(Agree to Dyninst licensing terms)
% cd <dir>/dyninstAPI-4.x

Add to .cshrc file: 

setenv DYNINST_ROOT <dyninst-dir>/dyninstAPI-4.x/
setenv PLATFORM    i386-unknown-linux2.4
setenv DYNINSTAPI_RT_LIB $DYNINST_ROOT/lib/$PLATFORM/libdyninstAPI_RT.so.1
setenv LD_LIBRARY_PATH <tau-root>/i386_linux/lib\:$DYNINST_ROOT/lib/$PLATFORM

% source ~/.cshrc

Compiling Dyninst (optional, you may download the binary release).

% cd $DYNINST_ROOT/core/
% make 
% cd $DYNINST_ROOT/core/dyninstAPI/tests/$PLATFORM
% make 
% ./test1
% ./test2
% ./test3

if it passes all tests then :

Part 2: Configuring TAU with Dyninst
------------------------------------

% tar zxvf tau-2.x.tar.gz
% cd <tau-root>
% configure -dyninst=$DYNINST_ROOT
% make install
% set path=(<tau-root>/i386_linux/bin $path)
% cd examples/dyninst
% make
% tau_run klargest
% pprof

If you're using DyninstAPI with an MPI application (works under Linux with 
MPICH), you need to follow these steps:

1) normally you'd invoke an mpi application using :
% mpirun -np <np> a.out <args>
2) With TAU and DyninstAPI, you'll need to invoke it as:
% mpirun -np <np> tau.shell <args>

where tau.shell is a shell script that you write as follows:
#!/bin/tcsh
<tauroot>/<arch>/bin/taurun -XrunTAUsh[-options] <full path to exec>/a.out $*

Note, by default taurun doesn't need the specification of the TAU library to
use (in the second -XrunTAUsh[-options] argument) but you can specify it when
more than one version of TAU is configured. For e.g.,

% mpirun -np 4 tau.papiwallclock.sh <args>
% cat tau.papiwallclock.sh 
#!/bin/tcsh
/home/users/sameer/tau2/i386_linux/bin/tau_run -XrunTAUsh-papiwallclock-papi /home/users/sameer/tau2/examples/mpi-ek/ek $*


